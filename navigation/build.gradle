import org.gradle.api.plugins.jetty.JettyRunWar

apply plugin: 'java'
apply plugin: 'jetty'

repositories {
    mavenCentral()
}

// custom configuration for running the webapp
configurations {
    solrWebApp
    additionalJettyJars
}

dependencies {
    solrWebApp "org.apache.solr:solr:4.7.0@war"
    additionalJettyJars "org.slf4j:slf4j-simple:1.6.1"
    additionalJettyJars "commons-logging:commons-logging:1.1.3"
    testCompile "junit:junit:4.10"
    testCompile("org.apache.solr:solr-test-framework:4.7.0") {
        exclude group: 'org.restlet.jee'
    }
    testCompile "org.slf4j:slf4j-simple:1.6.1"
    testCompile "commons-logging:commons-logging:1.1.3"
}

def explodedWebAppDir = "${buildDir}/explodedWebAppDir"

// I didn't find a good way to add the slf4j libs to the classpath
// this workaround copies the contents of the war file to a folder
// and adds the jars in WEB-INF/lib 
task runSolr(type: JettyRun, dependsOn: 'copyWar') {
    // jetty configuration
    httpPort = 8082
    contextPath = 'solr'
    webAppSourceDirectory = file(explodedWebAppDir)
}

task copyWar(type:Copy) {
    from zipTree(configurations.solrWebApp.singleFile)
    into explodedWebAppDir
    from configurations.additionalJettyJars
    into explodedWebAppDir + "/WEB-INF/lib/"
}

// executed before jetty plugin
runSolr.doFirst {
    System.setProperty("solr.solr.home", "./solrhome")
}
